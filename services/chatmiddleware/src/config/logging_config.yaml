version: 1
disable_existing_loggers: False

formatters:
  simple:
    # Basic formatter that outputs the log level and message.
    format: "%(levelname)s: %(message)s"
  detailed:
    # Formatter for detailed log output, including timestamp, level, module, line number, and message.
    format: "[%(levelname)s|%(module)s|L%(lineno)d] %(asctime)s: %(levelname)s: %(message)s"
    datefmt: "%Y-%m-%d%H:%M:%S%z"
  json:
    # Custom JSON formatter (defined in 'utils.customlogger.MyJSONFormatter')
    # Formats log records as JSON objects with specific fields.
    (): utils.customlogger.MyJSONFormatter
    fmt_keys:
      level: levelname
      message: message
      timestamp: timestamp
      logger: name
      module: module
      function: funcName
      line: lineno
      thread_name: threadName

filters:
  data_filter:
    # Custom filter to select log records where the message starts with '[data]'.
    (): utils.customlogger.DataFilter

handlers:
  queue_handler:
    # Handler that places log records into a queue.
    # Other handlers are configured as listeners to this queue handler.
    class: logging.handlers.QueueHandler
    handlers:
        - stderr
        - logfile
        - trainingdata
    respect_handler_level: True
  stderr:
    # Stream handler to output logs to stderr.
    class: logging.StreamHandler
    level: INFO
    formatter: simple
    stream: ext://sys.stderr
  logfile:
    # Rotating file handler for general application logs.
    # Rotates log files when they reach a certain size (maxBytes) and keeps a specified number of backup files (backupCount).
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: json
    filename: logs/session.log.jsonl  # Log file name includes a placeholder 'session' that can be replaced dynamically.
    maxBytes: 10485760  # 10MB
    backupCount: 3
  trainingdata:
    # Rotating file handler specifically for data-related logs.
    # Applies the 'data_filter' to only log messages that pass the filter criteria.
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: json
    filename: logs/data.log.jsonl
    maxBytes: 100000000  # 100MB
    backupCount: 3
    filters: [data_filter]

loggers:
  root:
    # Root logger configuration.
    level: DEBUG  # Sets the logging level to DEBUG, capturing all log messages.
    handlers:
        - queue_handler # Using the Queue handler as a proxy for all other handlers so the logging is async
