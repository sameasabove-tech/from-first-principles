[project]
name = "chatmiddleware"
version = "0.1.0"
description = "Add your description here"
authors = [
    { name = "LoÃ¯c Muhirwa", email = "loic.muhirwa@gmail.com" },
]
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "flask-cors>=5.0.0",
    "flask>=3.1.0",
    "load-dotenv>=0.1.0",
    "google-generativeai>=0.8.3",
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "ruff>=0.8.4",
    "mypy>=1.14.1",
    "pre-commit>=4.0.1",
]


[tool.pytest.ini_options]
addopts = "--cov=src --cov-branch --cov-report=term-missing --cov-report=html --cov-report=xml"

[tool.coverage.run]
branch = true
source = ["src"]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]
ignore_errors = true
show_missing = true
skip_covered = true

[tool.coverage.html]
directory = "coverage-report"


# Ruff configuration
[tool.ruff]
line-length = 120
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle
    "W",   # pycodestyle
    "F",   # Pyflakes
    "UP",  # pyupgrade
    "I",   # isort
    "B",   # flake8-bugbear
]
ignore = [
    "E501",  # Line too long (handled by formatter)
    "B008", # Do not perform function calls in argument defaults
    "B905", # 'zip()' without an explicit 'strict='
]

[tool.ruff.format]
# Use Black compatible formatting
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
force-single-line = true
lines-after-imports = 2
known-first-party = ["chatmiddleware"]
